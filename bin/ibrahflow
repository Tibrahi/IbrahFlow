#!/usr/bin/env node

const { program } = require('commander');
const fs = require('fs');
const path = require('path');
const chalk = require('chalk');
const ora = require('ora');

program
    .version('1.0.0')
    .description('IbrahFlow.js CLI - A simple and powerful framework for full-stack JavaScript development');

program
    .command('new <project-name>')
    .description('Create a new IbrahFlow project')
    .action(async (projectName) => {
        const spinner = ora('Creating new IbrahFlow project...').start();
        
        try {
            // Create project directory
            fs.mkdirSync(projectName);
            process.chdir(projectName);

            // Create project structure
            const dirs = ['views', 'public', 'public/css', 'public/js', 'public/images'];
            dirs.forEach(dir => fs.mkdirSync(dir, { recursive: true }));

            // Copy framework files
            const frameworkPath = path.join(__dirname, '..');
            fs.copyFileSync(
                path.join(frameworkPath, 'ibrahflow.js'),
                path.join(process.cwd(), 'ibrahflow.js')
            );

            // Create package.json
            const packageJson = {
                name: projectName,
                version: '1.0.0',
                description: 'IbrahFlow.js project',
                main: 'app.js',
                scripts: {
                    start: 'node app.js',
                    dev: 'nodemon app.js'
                },
                dependencies: {
                    'express': '^4.18.2',
                    'mysql2': '^3.6.0'
                },
                devDependencies: {
                    'nodemon': '^2.0.22'
                }
            };

            fs.writeFileSync(
                'package.json',
                JSON.stringify(packageJson, null, 2)
            );

            // Create app.js
            const appContent = `const IbrahFlow = require('./ibrahflow');

const app = new IbrahFlow({
    database: {
        host: 'localhost',
        user: 'root',
        password: 'your_password',
        database: '${projectName}'
    },
    port: 3000
});

app.connect().then(() => {
    app.get('/', async (req, res) => {
        const html = await app.render('index', {
            title: 'Welcome to ${projectName}',
            message: 'Your IbrahFlow.js application is ready!'
        });
        res.send(html);
    });

    app.start();
}).catch(error => {
    console.error('Failed to start application:', error);
});`;

            fs.writeFileSync('app.js', appContent);

            // Create default view
            const viewContent = `<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>{{title}}</title>
    <link rel="icon" type="image/png" href="/images/ibrahflow-favicon.png">
    <link rel="stylesheet" href="/css/style.css">
</head>
<body>
    <div class="container">
        <div class="logo">
            <img src="/images/ibrahflow-logo.png" alt="IbrahFlow Logo">
        </div>
        <h1>{{title}}</h1>
        <p class="message">{{message}}</p>
    </div>
    <script src="/js/app.js"></script>
</body>
</html>`;

            fs.writeFileSync('views/index.html', viewContent);

            // Create default CSS
            const cssContent = `body {
    font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
    margin: 0;
    padding: 0;
    background: linear-gradient(135deg, #f5f7fa 0%, #c3cfe2 100%);
    min-height: 100vh;
    display: flex;
    align-items: center;
    justify-content: center;
}

.container {
    background: white;
    padding: 2rem;
    border-radius: 10px;
    box-shadow: 0 10px 20px rgba(0,0,0,0.1);
    text-align: center;
    max-width: 600px;
    width: 90%;
}

.logo {
    margin-bottom: 2rem;
}

.logo img {
    max-width: 200px;
    height: auto;
}

h1 {
    color: #2c3e50;
    margin-bottom: 1rem;
    font-size: 2.5rem;
}

.message {
    color: #34495e;
    font-size: 1.2rem;
    line-height: 1.6;
}`;

            fs.writeFileSync('public/css/style.css', cssContent);

            spinner.succeed(chalk.green('Project created successfully!'));
            console.log('\nTo get started:');
            console.log(chalk.cyan(`  cd ${projectName}`));
            console.log(chalk.cyan('  npm install'));
            console.log(chalk.cyan('  npm start'));
            console.log('\nHappy coding with IbrahFlow.js! ðŸš€');

        } catch (error) {
            spinner.fail(chalk.red('Failed to create project: ' + error.message));
        }
    });

program.parse(process.argv); 